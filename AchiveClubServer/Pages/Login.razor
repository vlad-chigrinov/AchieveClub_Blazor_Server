@page "/login"
@inject UserLoginService _login
@inject AdminLoginService _adminLogin
@inject NavigationManager _navigation

<!-----------------------------------nav----------------------------------------->
<header>
    <div class="header-wrapper">
        <div class="img">
            <img src="./image/gllg.png" alt="">
        </div>
        <div class="text-wrapper">
            <h3>
                @*<b>AchieveClub</b> for <m>It_Club</m>*@
                <b>Система достижений</b>
            </h3>
        </div>
    </div>
</header>
<!-----------------------------------main----------------------------------------->
<main>
    <div class="content-wrapper">
        <div class="headingWrapper">
            <h3>Войти в систему</h3>
            <MudDivider Style="color:black;border: 1px solid black" />
        </div>
        <div class="registerForm">
            <p @onclick="ToRegistration">Зарегистрироваться</p>
        </div>
        <div class="emailForm">
            <MudTextField @bind-Value="loginParams.Email" Label="Email" Variant="Variant.Outlined" Adornment="Adornment.None" AdornmentIcon="@Icons.Material.Filled.Email" />
        </div>
        <div class="passwordForm">
            <MudTextField @bind-Value="loginParams.Password" Label="Пароль" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonPassClick" AdornmentAriaLabel="Show Password" />
     
        </div>
        <div class="submitButton">
            <MudButton Variant="Variant.Outlined" 
            Style="background: #4E9BDA !important;
            color: white !important;
            font-family: 'Play', sans-serif !important;
            height: 45px !important;
            font-size: large !important;
            font-weight: bold !important;
            border:none !important;"
            FullWidth="true" ButtonType="ButtonType.Submit" @onclick="LoginUser">Войти</MudButton>
        </div>
        <p>@result</p>
    </div>
</main>

@code
{
    private LoginParams loginParams = new LoginParams();
    private string result;

    public async Task LoginUser()
    {
        if (await _login.Login(loginParams) == true)
        {
            result = $"Вы вошли {_login.CurrentUser.FirstName} {_login.CurrentUser.LastName}";
            _navigation.NavigateTo("/");
        }
        else if(_adminLogin.Login(loginParams))
        {
            result = $"Вы вошли {_adminLogin.CurrentAdmin.Name} как администратор!";
            _navigation.NavigateTo("/admin");
        }
        else
        {
            result = "Введите верные данные для входа!";
        }
        Console.WriteLine(result);
    }

    public void ToRegistration()
    {
        _navigation.NavigateTo("/registration");
    }

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ButtonPassClick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}